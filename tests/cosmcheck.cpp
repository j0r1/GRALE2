#include "cosmology.h"
#include "constants.h"
#include <vector>
#include <cmath>
#include <iostream>
#include <map>

using namespace grale;
using namespace std;

bool approxSame(double x1, double x2)
{
    if (std::abs(x1-x2)/std::abs(x1) > 1e-5)
        return false;
    if (std::abs(x1-x2)/std::abs(x2) > 1e-5)
        return false;
    return true;        
}

int main(int argc, char const *argv[])
{
    vector<map<string, double>> settings = {
        { { "h", 0.7127024082704583 }, { "Wm", 0.3030685938523593 }, { "Wr", 0.07477970813375749 }, { "Wv", 0.675599101273732 }, { "w", -1.0401544081282328 }, { "z1", 1.2410444842148194 }, { "z2", 1.3877408299937746 }, { "resultmpc", 103.61737748907998 } },
        { { "h", 0.6420945881783651 }, { "Wm", 0.33070932111931833 }, { "Wr", 0.05925271303231172 }, { "Wv", 0.6049409353670807 }, { "w", -1.0351044187401819 }, { "z1", 0.41949655232807215 }, { "z2", 1.9951095276693038 }, { "resultmpc", 1111.113517597889 } },
        { { "h", 0.6792920724552172 }, { "Wm", 0.3120429506282352 }, { "Wr", 0.05214438764708959 }, { "Wv", 0.6541703635476833 }, { "w", -0.9612394514669229 }, { "z1", 0.7693392882166402 }, { "z2", 3.4046902928019493 }, { "resultmpc", 779.7380144069256 } },
        { { "h", 0.7253684846397752 }, { "Wm", 0.2511117968102956 }, { "Wr", 0.05483740967218183 }, { "Wv", 0.6363594133898527 }, { "w", -0.9788467508274111 }, { "z1", 0.11309436524531052 }, { "z2", 4.2379825871084815 }, { "resultmpc", 1132.6514844956853 } },
        { { "h", 0.6005102508551227 }, { "Wm", 0.2869330715861115 }, { "Wr", 0.0013134790872271875 }, { "Wv", 0.7117534493266613 }, { "w", -0.9089515822377152 }, { "z1", 0 }, { "z2", 2.7274444061075043 }, { "resultmpc", 1884.9301437563342 } },
        { { "h", 0.6080473500482793 }, { "Wm", 0.34778591851525287 }, { "Wr", 0.062308665842958515 }, { "Wv", 0.7614098842192432 }, { "w", -1.0220652663980436 }, { "z1", 0 }, { "z2", 2.3564926875501393 }, { "resultmpc", 1698.360910081167 } },
        { { "h", 0.7770506626954705 }, { "Wm", 0.33623313274756256 }, { "Wr", 0.07629837401577719 }, { "Wv", 0.5874684932366603 }, { "w", -1.0286842571615202 }, { "z1", 0 }, { "z2", 0.7455343699258373 }, { "resultmpc", 1272.0226407716866 } },
        { { "h", 0.755271096294902 }, { "Wm", 0.32560124750914227 }, { "Wr", 0.0768346153256165 }, { "Wv", 0.5975641371652411 }, { "w", -0.9009127573950849 }, { "z1", 0 }, { "z2", 3.2713795133357433 }, { "resultmpc", 1189.1093077234423 } },
        { { "h", 0.7585372193701676 }, { "Wm", 0.2501635479322028 }, { "Wr", 0.025030055581575495 }, { "Wv", 0.6178190445678605 }, { "w", -1.0461349117127023 }, { "z1", 0.1005301617560665 }, { "z2", 0.13583684159291654 }, { "resultmpc", 115.52071440900713 } },
        { { "h", 0.631886427401207 }, { "Wm", 0.28604724403452847 }, { "Wr", 0.09238128719057954 }, { "Wv", 0.6534662947144273 }, { "w", -0.9333964936392535 }, { "z1", 0.948266054016351 }, { "z2", 4.00611172745328 }, { "resultmpc", 658.6506650541909 } },
        { { "h", 0.7462407360781951 }, { "Wm", 0.34630387177793176 }, { "Wr", 0.07540875731921895 }, { "Wv", 0.7074802940438372 }, { "w", -1.0024376806161095 }, { "z1", 0 }, { "z2", 3.82234908163425 }, { "resultmpc", 1113.279499731483 } },
        { { "h", 0.7384143402046875 }, { "Wm", 0.2744086826221329 }, { "Wr", 0.03539689512873913 }, { "Wv", 0.7611476445427597 }, { "w", -1.0098549031821622 }, { "z1", 0 }, { "z2", 1.703173918313043 }, { "resultmpc", 1613.5491919247647 } },
        { { "h", 0.7384357950470662 }, { "Wm", 0.26685526065512494 }, { "Wr", 0.014743075762406577 }, { "Wv", 0.7960266411586262 }, { "w", -0.9918085004860213 }, { "z1", 0 }, { "z2", 4.086855439029239 }, { "resultmpc", 1318.7547014111367 } },
        { { "h", 0.687764897643326 }, { "Wm", 0.2855460359532136 }, { "Wr", 0.0010350918378217112 }, { "Wv", 0.7262810497689729 }, { "w", -1.010584882009574 }, { "z1", 0.596504674181993 }, { "z2", 1.3136251219434298 }, { "resultmpc", 812.3098890669645 } },
        { { "h", 0.7499994513363832 }, { "Wm", 0.3062143957282143 }, { "Wr", 0.022420182439585257 }, { "Wv", 0.7938713921514561 }, { "w", -0.9467378192298239 }, { "z1", 1.4034578049719162 }, { "z2", 4.363889390864142 }, { "resultmpc", 511.76890753114975 } },
        { { "h", 0.6354617422510215 }, { "Wm", 0.2799219450601 }, { "Wr", 0.0019421432346903745 }, { "Wv", 0.7181359117052097 }, { "w", -0.9873468333848454 }, { "z1", 0.32312420061655095 }, { "z2", 3.918180167388458 }, { "resultmpc", 1327.2056730692107 } },
        { { "h", 0.6652240296074471 }, { "Wm", 0.2666979555615899 }, { "Wr", 0.00485220010120907 }, { "Wv", 0.7284498443372012 }, { "w", -1.0093303623611938 }, { "z1", 0.2923586733104886 }, { "z2", 2.4785630888600627 }, { "resultmpc", 1439.7965505298519 } },
        { { "h", 0.6066346926545395 }, { "Wm", 0.26814063810755595 }, { "Wr", 0.015955181101109005 }, { "Wv", 0.6203841065814379 }, { "w", -1.003977212347149 }, { "z1", 0.804976493114067 }, { "z2", 0.7039289318860639 }, { "resultmpc", 174.69029600772038 } },
        { { "h", 0.6609518444493941 }, { "Wm", 0.311090058415846 }, { "Wr", 0.07259228889110385 }, { "Wv", 0.6654533459600667 }, { "w", -1.0460927890829252 }, { "z1", 0 }, { "z2", 0.5815094059808996 }, { "resultmpc", 1393.0197248403647 } },
        { { "h", 0.7014128163270665 }, { "Wm", 0.32546805585972455 }, { "Wr", 0.05038945575212245 }, { "Wv", 0.7950725450243251 }, { "w", -0.912314243852006 }, { "z1", 1.357713997764972 }, { "z2", 0.7783058949293085 }, { "resultmpc", 525.9207537455279 } },
    };

    int idx = 0;
    for (auto &s : settings)
    {
        idx++;
        cerr << "Checking " << idx << endl;

        Cosmology cosm(s["h"], s["Wm"], s["Wr"], s["Wv"], s["w"]);
        double dist = cosm.getAngularDiameterDistance(s["z1"], s["z2"]);
        
        if (std::isnan(dist))
        {
            cerr << "Error: " << cosm.getErrorString() << endl;
            return -1;
        }

        dist /= DIST_MPC;
        if (!approxSame(dist, s["resultmpc"]))
        {
            cerr << "Expecting " << s["resultmpc"] << " but got " << dist << endl;
            //return -1;
        }
    }
    return 0;
}
