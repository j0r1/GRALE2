cmake_minimum_required(VERSION 3.5)
if (POLICY CMP0042)
	cmake_policy(SET CMP0042 NEW)
endif()

project(grale2)
set(VERSION 0.13.0)

set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${PROJECT_SOURCE_DIR}/cmake")

include(CheckIncludeFile)
include(CheckIncludeFileCXX)
include(${PROJECT_SOURCE_DIR}/cmake/Macros.cmake)
include(CheckCXXCompilerFlag)
include(CheckCXXSourceCompiles)
CHECK_CXX_COMPILER_FLAG("-std=c++17" COMPILER_SUPPORTS_CXX17)
if(COMPILER_SUPPORTS_CXX17)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++17")
else()
	CHECK_CXX_COMPILER_FLAG("/std:c++17" COMPILER_SUPPORTS_CXX17_VS) # For visual studio
	if(COMPILER_SUPPORTS_CXX17_VS)
		set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /std:c++17")
	else()
		# Test if the compiler already supports C++17
		check_cxx_source_compiles("#include <utility>\n\nint main(void)\n{\n\tauto f = [](auto x)\n\t{\n\t\treturn x*x;\n\t};\n\tauto [ a, b ] = std::pair<double, int>(1.0,1);\n\treturn 0;\n}\n" C17AVAIL)
		if (NOT C17AVAIL)
			message(FATAL_ERROR "The compiler ${CMAKE_CXX_COMPILER} has no C++17 support.")
		endif()
	endif()
endif()

get_install_directory(LIBRARY_INSTALL_DIR)

if (MSVC)
	set(GRALE_COMPILE_STATIC ON CACHE BOOL "Flag indicating if a static library should be built, or a dynamic one")
endif (MSVC)
if (NOT MSVC)
	option(GRALE_LINK "Flag indicating if the shared library should be automatically linked against the other libraries used" ON)
else (NOT MSVC)
	if (GRALE_COMPILE_STATIC)
		set(GRALE_LINK FALSE)
	else (GRALE_COMPILE_STATIC)
		set(GRALE_LINK TRUE)
	endif (GRALE_COMPILE_STATIC)
endif (NOT MSVC)
if (MSVC)
	set(GRALE_PROGRAMS_LIBRARY_CORE gralecore-static)
	set(GRALE_PROGRAMS_LIBRARY_INV graleinv-static)
else ()
	set(GRALE_PROGRAMS_LIBRARY_CORE gralecore-shared)
	set(GRALE_PROGRAMS_LIBRARY_INV graleinv-shared)
endif ()

find_package(MPI)
if (MPI_FOUND)
	set(TMP TRUE)
else (MPI_FOUND)
	set(TMP FALSE)
endif (MPI_FOUND)
option(GRALE_SUPPORT_MPI "Enable MPI support" ${TMP})

add_subdirectory(core)
add_subdirectory(inversion)
#add_subdirectory(programs)

option(GRALE_COMPILE_TESTS "Compile tests (doesn't link on Windows)" YES)
if (GRALE_COMPILE_TESTS)
	add_subdirectory(tests)
endif()
